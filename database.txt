1. User Model (user)
  Fields:
    id: Auto-incrementing primary key.
    username: Unique identifier for login.
    email: Unique email for communication and verification.
    password: Stored as a hashed value.
    address: JSON data for storing multiple addresses.
    created_at: Timestamp for when the user is created.
    role: Enum for user roles (User or Admin).
  Relationships:
    orders: One-to-many relationship with orders.
    cart: One-to-one relationship with cart.
2. Product Model (product)
  Fields:
    id: Auto-incrementing primary key.
    name: Product name.
    description: Details about the product.
    price: Integer, represents price.
    stock: Integer, inventory count.
    created_at: Date product was added to the system.
    category_id: Foreign key to category.
  Relationships:
    carts: Many-to-many relationship with cart using a join table (in cart).
    orders: Many-to-many relationship with orders using a join table (in orders).
    category: Many-to-one relationship with category.
3. Category Model (category)
  Fields:
    id: Auto-incrementing primary key.
    name: Category name (e.g., Electronics, Clothing).
    description: Category description.
  Relationships:
    product: One-to-many relationship with product.
4. Cart Model (cart)
  Fields:
    id: Auto-incrementing primary key.
    created_at: Date the cart was created.
    updated_at: Timestamp for the last update.
    user_id: Foreign key linking to user.
  Relationships:
    user: One-to-one relationship with user.
    products: Many-to-many relationship with product via a join table (no additional cart_item model is used here).
5. Orders Model (orders)
  Fields:
    id: Auto-incrementing primary key.
    status: Enum (Pending, Shipped, Delivered).
    total_price: Total amount for the order.
    created_at: Timestamp of when the order was placed.
    user_id: Foreign key linking to user.
  Relationships:
    user: Many-to-one relationship with user.
    products: Many-to-many relationship with product.
    payment: One-to-one relationship with payment.
6. Payment Model (payment)
  Fields:
    id: Auto-incrementing primary key.
    payment_method: Enum (Card, UPI, COD).
    amount: Total payment amount.
    status: Enum (Successful, Failed).
    transaction_id: Unique identifier for the transaction.
    created_at: Date and time of payment.
    order_id: Foreign key to orders.
  Relationships:
    order: One-to-one relationship with orders.
Enums
Role: Differentiates between USER and ADMIN.
Status: Defines the status of an order (PENDING, SHIPPED, DELIVERED).
Pay: Represents payment methods (CARD, UPI, COD).
Pay_Status: Indicates whether a payment was SUCCESSFUL or FAILED.